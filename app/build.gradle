apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// Firebase App Distribution
//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.appdistribution'

// Safe Args for Navigation Component
apply plugin: 'androidx.navigation.safeargs.kotlin'

// Hilt
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 29

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // Firebase App Distribution
//    def keystoreProperties = new Properties()
//    keystoreProperties.load(new FileInputStream(rootProject.file("/Users/saberLiou/Documents/AndroidAppKeyStores/saberLiou-keystore.properties")))

    defaultConfig {
        applicationId "saberliou.demo.profile"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "saberliou.demo.profile.di.TestApplicationRunner"

        vectorDrawables.useSupportLibrary = true

        multiDexEnabled true
    }

    // Firebase App Distribution
//    signingConfigs {
//        release {
//            storeFile file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//        }
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // Firebase App Distribution
//            signingConfig signingConfigs.release
//            firebaseAppDistribution {
//                releaseNotes = "Under Construction..."
//                testers = "saberliou@gmail.com"
//            }
        }
    }

    buildFeatures {
        dataBinding true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    // AndroidX Test - JVM testing to provide the application context for ViewModel.
    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
    }

    sourceSets {
        String sharedTestDir = "src/sharedTest/java"
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Androidx Fragment
    def androidx_fragment_version = "1.3.0-alpha04"
    implementation "androidx.fragment:fragment:$androidx_fragment_version"
    implementation "androidx.fragment:fragment-ktx:$androidx_fragment_version"
    debugImplementation "androidx.fragment:fragment-testing:$androidx_fragment_version"

    // Material
    implementation "com.google.android.material:material:1.2.0"

    // Material Dialogs
    def material_dialogs_version = "3.3.0"
    implementation "com.afollestad.material-dialogs:core:$material_dialogs_version"
    implementation "com.afollestad.material-dialogs:input:$material_dialogs_version"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_component_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_component_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$navigation_component_version"

    // Lifecycle
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Room
    def room_version = "2.3.0-alpha03"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // Retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // Coroutines
    def coroutine_version = "1.3.7"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"

    // WorkManager
//    def workmanager_version = "2.4.0"
//    implementation "androidx.work:work-runtime-ktx:$workmanager_version"
//    androidTestImplementation "androidx.work:work-testing:$workmanager_version"

    // Dagger
    def dagger_version = "2.29.1"
//    kapt "com.google.dagger:dagger-compiler:$dagger_version"
//    implementation "com.google.dagger:dagger:$dagger_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"

    // Hilt
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Hilt with Jetpack
    def hilt_jetpack_version = "1.0.0-alpha02"
    kapt "androidx.hilt:hilt-compiler:$hilt_jetpack_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_jetpack_version"

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // JUnit
    def junit_version = "4.13"
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "junit:junit:$junit_version"

    // MockK
    androidTestImplementation "io.mockk:mockk-android:1.10.2"

    // AndroidX Test - JVM testing to provide the application context for ViewModel.
    def androidx_test_version = "1.2.0"
    def androidx_test_ext_version = "1.1.1"
    def androidx_arch_core_version = "2.0.0"
    testImplementation "androidx.test:rules:$androidx_test_version"
    testImplementation "androidx.test:core-ktx:$androidx_test_version"
    testImplementation "androidx.test.ext:junit:$androidx_test_ext_version"
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation "androidx.arch.core:core-testing:$androidx_arch_core_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_ext_version"
    androidTestImplementation "androidx.arch.core:core-testing:$androidx_arch_core_version"

    // Espresso
    def espresso_version = "3.2.0"
    implementation "androidx.test.espresso:espresso-idling-resource:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"

    // Firebase App Distribution
//    implementation 'com.google.firebase:firebase-analytics:17.5.0'
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Multidex
    implementation 'com.android.support:multidex:1.0.3'
}